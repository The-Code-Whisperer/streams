programmatic navigation
history.push("/");
why is it called history? Guess it pulls it from history idk lol.

336. directly editing db.json

337. url-based selection uses react-router-dom. Before we had a songSelectionReducer. But now we can put the id of the stream directly into the URL, probably easier. Actually it's also better, it has more features! 

338. clicking edit button should go to streams/edit/id_of_stream. use url-based selection. Tweak the Route in the App.js file to need :id (id can be anything but doing this for variable naming) in url. Change the edit button instead of a button tag to a Link tag so it goes to a different page with ES2015 backtick variable syntax. stream.id is the `${variable}` portion.

339. get the stream id out of the url to process. If I console.log(this.props) in the streamEdit component I can find it in this.props.match.params.id. putting exact requires the exact path. Not putting it allows parent paths to work.

340. selecting records from state. get list of streams into component by using the connect function with mapStateToProps. The object mapStateToProps will return happens to have a stream property that's all we need, so write the return statement like: return { stream: state.streams[ownProps.match.params.id] }. Now the props object now has a stream property that contains the entire stream object that has the id in the url. But the console.log shows no data! Until we edit stream! Why? Guessing because props only works after the load? No, the console.log is IN the component! So idk. 

341. The answer is apparently that we have not yet loaded any streams into our application! Because we do that by using fetchStreams action sending to the reducer to set the empty state. So make sure to connect fetchStreams as well!

342. Actually call fetchStream (faster and more precise), no need to call fetchStreams. Call it in the cDM function. Pass in those props we just passed in using mapStateToProps from the url, as in this.props.match.params.id. Remember that props is used in function components whereas it's this.props in class components. Don't use function components anyway they have no real advantages IMO. Now if we want to use this.props.stream.title in the JSX, remember to account for that at first that property will be empty.

343. editStream and createstream look very similar. combine them with streamform. Put onSubmit and initialValues in there. copy all of createstream to streamform is fine, but export default the wrapped form. The connect and action need not be imported anymore. And onSubmit should not automatically call createStream action. Instead it should use props to do createStream or streamEdit depending.

344. refactoring. the streamform component goes inside each of createstream and editStream. 